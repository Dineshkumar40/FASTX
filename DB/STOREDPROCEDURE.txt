           STOREDPROCEDURE
------------------------------------------
1. GetAllUsers:
CREATE PROCEDURE [dbo].[GetAllUsers]
AS
BEGIN 
SELECT u.Id, u.FName,u.LName,u.Age,u.Gender,r.RoleType FROM Users As u INNER JOIN roles AS r on u.roleid = r.id;
END
GO

2. CreateOrUpdate:
CREATE PROCEDURE [dbo].[CreateOrUpdate] 
@id nvarchar(255) , @fName nvarchar (255) , @lName nvarchar (255) , @age int ,
@gender nvarchar(255), @roleType nvarchar(255) 

AS 
declare @roleId nvarchar(255) 
select @roleId = Id from roles where roletype =  @roleType;

IF NOT EXISTS (select Id from Users where Id = @Id)
begin
Insert into Users values (@id , @fName , @lName , @age , @gender , @roleId )
end 

else begin 
update Users set FName = @fName , LName = @lName , Age = @age , gender = @gender , roleid = @roleId
where Id = @Id
end
GO

3.DeleteUser:
create procedure [dbo].[DeleteUser] 
@id nvarchar(255)
AS 
BEGIN 
delete from Users where Id = @id;
end 
GO

4.SearchBuseswith Filter:
CREATE PROCEDURE [dbo].[SearchBuses]
    @FromLocation VARCHAR(100),
    @ToLocation VARCHAR(100),
    @travelDays VARCHAR(100), 
    @busType VARCHAR(MAX) = NULL,
    @departureTimeSlots varchar(100),
    @arrivalTimeSlots varchar(100)
AS
BEGIN
    SELECT 
        B.busId, 
        B.busName, 
        B.BusNumber, 
        B.BusType, 
        B.TotalSeats, 
        B.AvailableSeats,  
        B.DepartureTime, 
        B.ArrivalTime, 
        B.Fare,
        B.complementory,
        R.RouteName,              
        R.StartLocation,    
        R.EndLocation,
        R.totalTime       
    FROM  
        BusInfo B
    INNER JOIN 
        Routes R ON B.RouteID = R.RouteId  
    WHERE 
        R.StartLocation = @FromLocation 
        AND R.EndLocation = @ToLocation 
        AND B.TravelDays LIKE '%' + @travelDays + '%'   
AND (
            @busType IS NULL OR CHARINDEX(B.BusType, @busType) > 0 
        )
        AND (
            @departureTimeSlots IS NULL OR  
            (
                (CHARINDEX('Before6AM', @DdepartureTimeSlots) > 0 AND  B.DepartureTime >= '06:00:00' AND  B.DepartureTime < '12:00:00') OR
                (CHARINDEX('From12PMTo6PM', @departureTimeSlots) > 0 AND  B.DepartureTime >= '12:00:00' AND  B.DepartureTime < '18:00:00')
            )
        )
        AND (
            @arrivalTimeSlots IS NULL OR  
            (
                (CHARINDEX('ArrivalBefore6AM', @arrivalTimeSlots) > 0 AND B.ArrivalTime < '06:00:00') OR
                (CHARINDEX('ArrivalFrom6AMTo12PM', @arrivalTimeSlots) > 0 AND B.ArrivalTime >= '06:00:00' AND B.ArrivalTime < '12:00:00') OR
                (CHARINDEX('ArrivalFrom12PMTo6PM', @arrivalTimeSlots) > 0 AND B.ArrivalTime >= '12:00:00' AND B.ArrivalTime < '18:00:00')
            )
        );
END;
GO

5. AddOrUpdateBusWithSeats:

CREATE PROCEDURE AddOrUpdateBusWithSeats
    @busId VARCHAR(100),
    @busName VARCHAR(100),
    @busNumber VARCHAR(100),
    @busType VARCHAR(100),
    @totalSeats INT,
    @departureTime Time,
    @arrivalTime Time,
    @fare INT,
    @routeId INT,
    @travelDays VARCHAR(100),
    @complementory varchar(100)
AS
BEGIN
    IF EXISTS (SELECT 1 FROM BusInfo WHERE busId = @busId)
    BEGIN
        UPDATE BusInfo
        SET 
            BusName = @busName,
            BusNumber = @busNumber,
            BusType = @busType,
            TotalSeats = @totalSeats,
            AvailableSeats = @totalSeats,
            DepartureTime = @departureTime,
            ArrivalTime = @arrivalTime,
            Fare = @fare,
            RouteId = @routeId,
            TravelDays = @travelDays,
            Complementory = @complementory
        WHERE BusId = @busId;

        DELETE FROM BusSeats WHERE BusID = @busId;

        DECLARE @seatNum INT = 1;
        WHILE @seatNum <= @totalSeats
        BEGIN
            INSERT INTO BusSeats (SeatID, BusID, SeatNumber, IsAvailable, Price)
            VALUES (NEWID(), @busId, 'S' + CAST(@seatNum AS VARCHAR), 1, @fare);

            SET @seatNum = @seatNum + 1;
        END;
    END
    ELSE
    BEGIN
        INSERT INTO BusInfo (BusId, BusName, BusNumber, BusType, TotalSeats, DepartureTime, ArrivalTime, Fare, RouteId, TravelDays,Complementory)
        VALUES (@busId, @busName, @busNumber, @busType, @totalSeats, @departureTime, @arrivalTime, @fare, @routeId, @travelDays,@complementory);
        
        DECLARE @seatNum INT = 1;
        WHILE @seatNum <= @totalSeats
        BEGIN
            INSERT INTO BusSeats (SeatID, BusID, SeatNumber, IsAvailable, Price)
            VALUES (NEWID(), @busId, 'S' + CAST(@seatNum AS VARCHAR), @fare);

            SET @seatNum = @seatNum + 1;
        END;
    END;
END;

6. ADDORUPDATE ROUTE:

CREATE PROCEDURE AddOrUpdateRoute
    @routeId INT = NULL,          
    @routeName VARCHAR(100),
    @startLocation VARCHAR(100),
    @endLocation VARCHAR(100),
    @totalTime TIME
AS
BEGIN
    SET NOCOUNT ON;

    IF @routeId IS NOT NULL AND EXISTS (SELECT 1 FROM Routes WHERE RouteId = @routeId)
    BEGIN
        UPDATE Routes
        SET 
            RouteName = @routeName,
            StartLocation = @startLocation,
            EndLocation = @endLocation,
            TotalTime = @totalTime
        WHERE RouteId = @routeId;
    END
    ELSE
    BEGIN
        INSERT INTO Routes (RouteName, StartLocation, EndLocation, TotalTime)
        VALUES (@routeName, @startLocation, @endLocation, @totalTime);
    END
END;
GO

7.DELETE ROUTE 
CREATE PROCEDURE DeleteRoute
    @routeId INT
AS
BEGIN
    SET NOCOUNT ON;
    DELETE FROM Routes 
    WHERE RouteId = @routeId;
END;
GO

8. DELETE BusInfo
CREATE PROCEDURE DeleteBusInfo
    @busId VARCHAR(100)
AS
BEGIN
    SET NOCOUNT ON;

    DELETE FROM BusSeats 
    WHERE BusID = @busId;

    DELETE FROM BusInfo 
    WHERE BusId = @busId;
END;
GO





